language: rust
os:
  - linux
  - osx
  - windows

rust:
  - stable
  - beta
  - nightly

jobs:
  fast_finish: true
  allow_failures:
    - rust: beta
    - rust: nightly

env:
  global:
    - CARGO_MAKE_RUN_CODECOV="true"
    - CARGO_MAKE_KCOV_INSTALLATION_DIRECTORY="$HOME/.cache/kcov"

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - libfreetype6-dev
      - libexpat1-dev
      - libxcb-composite0-dev
      - libssl-dev
      - libx11-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      - pkg-config
      - openssl
      - libasound2-dev
      - build-essential
      - python3

cache:
  cargo: true
  directories:
    - $HOME/.cargo
    - $HOME/.cache

before_cache:
  - rm -rf "$TRAVIS_HOME/.cargo/registry/src"
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then
      cargo install cargo-tarpaulin -f
      cargo install --debug cargo-make
    fi

before_script:
    - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then
        rustup component add rustfmt;
      fi


script:
  - cargo clean
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then
      cargo make ci-flow
      cargo fmt --all -- --check;
    fi
  - cargo build --verbose --all --all-targets
  - cargo test --verbose --all

after_success:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then
      cargo tarpaulin --out Xml
      bash <(curl -s https://codecov.io/bash)
    fi
